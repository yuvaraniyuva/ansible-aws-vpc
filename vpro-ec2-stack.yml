- name: Setup Vprofile Stack
  hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPCID setup Variables
      include_vars: vars/output_vars

    - name: Import vprofile setup Variables
      include_vars: vars/vprostacksetup

    - name: Import VPC setup Variables
      include_vars: vars/vpc_setup

    - name: Create vprofile ec2 key
      ec2_key:
        name: vprokey
        region: "{{region}}"
      register: vprokey_out

    - name: Save Private Key into File loginkey_vpro.pem
      copy:
        content: "{{vprokey_out.key.private_key}}"
        dest: "./loginkey_vpro.pem"
        mode: 0600
      when: vprokey_out.changed

    - name: Create Security Group for Load Balancer
      ec2_group:
        name: vproELB-sg
        description: Allow port 80 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vproELBSG_out

    - name: Create Security Group for Vprofile Stack
      ec2_group:
        name: vproStack-sg
        description: Allow port 22 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELBSG_out.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{BastionSGid}}"
      register: vproStackSG_out

    - name: Update Security Group with its own sg id
      ec2_group:
        name: vproStack-sg
        description: Allow port 22 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{vproStackSG_out.group_id}}"

    - name: Creating Nginx web01
      ec2_instance:
        name: "web01"
        key_name: "vprokey"
        region: "{{region}}"
        vpc_subnet_id: "{{privsub1id}}"
        instance_type: t2.micro
        security_group: vproStack-sg
        image_id: "{{nginx_ami}}"
        tags:
          Name: web01
      register: web01_out

    - name: Creating Tomcat app01
      ec2_instance:
        name: "app01"
        key_name: "vprokey"
        region: "{{region}}"
        vpc_subnet_id: "{{privsub1id}}"
        instance_type: t2.micro
        security_group: vproStack-sg
        image_id: "{{tomcat_ami}}"
        tags:
          Name: app01
      register: app01_out

    - name: Creating Memcache mc01
      ec2_instance:
        name: "mc01"
        key_name: "vprokey"
        region: "{{region}}"
        vpc_subnet_id: "{{privsub1id}}"
        instance_type: t2.micro
        security_group: vproStack-sg
        image_id: "{{memcache_ami}}"
        tags:
          Name: mc01
      register: mc01_out

    - name: Creating RabbitMQ rmq01
      ec2_instance:
        name: "rmq01"
        key_name: "vprokey"
        region: "{{region}}"
        vpc_subnet_id: "{{privsub1id}}"
        instance_type: t2.micro
        security_group: vproStack-sg
        image_id: "{{rmq_ami}}"
        tags:
          Name: rmq01
      register: rmq01_out

    - name: Creating MySQL db01
      ec2_instance:
        name: "db01"
        key_name: "vprokey"
        region: "{{region}}"
        vpc_subnet_id: "{{privsub1id}}"
        instance_type: t2.micro
        security_group: vproStack-sg
        image_id: "{{mysql_ami}}"
        tags:
          Name: db01
      register: db01_out

    - debug:
        var: db01_out